# Azure DevOps Pipeline to perform a terraform init, terraform plan and terraform apply.
# Pipeline will trigger when a pull request is made into prod. Stage 1 will perform terraform validation, init and plan.
# A comment will be made on the PR with Terraform changes.
# On PR approval, the pipeline will run again and in addition, will run Stage 2 Apply and apply changes to prod.

name: terraform-plan-apply-prod

trigger:
  branches:
    include: # Pipeline will only trigger for prod branch
    - prod
  paths:
    exclude: # This pipeline will not trigger for changes to below files and folders 
    - .azure-pipelines/*
    - '*.md'

variables:
  ARM_SUBSCRIPTION_ID: c953b194-7fa9-439e-9535-49003de2bf00
  ARM_TENANT_ID: bb4c9e42-b982-4573-8741-cb71d8b92af4
  ARM_USE_MSI: 1
  azureSubscription: azure-sub-mgmt
  keyvaultName: KEYVAULTNAME # Key Vault containing Azure DevOps PAT and Azure Resource Manager secrets
  skipComponentGovernanceDetection: true
  TF_IN_AUTOMATION: 1

stages:      
  # This stage contains the necessary steps to validate and initialise Terraform
  - stage: plan
    displayName: Terraform plan
    jobs:
    - job: planjob
      variables:
        environment: prod
      displayName: Terraform plan job (${{ variables['environment'] }})
      pool: terraform
      steps:
      - script: env | sort
        displayName: Display variables
        enabled: false

      - script: |
          echo "PR validation builds must run from canary branch. Manual or CI builds must run from prod branch."
          echo "Here are the environment variables to help debug:"
          env | sort
          exit 1
        condition: |
          not(
            or(
              and(
                eq(variables['Build.Reason'], 'PullRequest'),
                eq(variables['System.PullRequest.SourceBranch'], 'refs/heads/canary')
              ),
              and(
                in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'),
                eq(variables['Build.SourceBranchName'],'prod')
              )
            )
          )
        displayName: Check if PR from canary or CI from prod
      - template: templates/tf-common-plan.yml

  # This stage will run and apply Terraform changes if the pipeline is running after a PR merge   
  - stage: apply
    displayName: Terraform apply
    dependsOn: plan
    condition: |
      and(
        succeeded(),
        in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual')
      )
    jobs:
    - template: templates/tf-common-apply.yml
